Done:
- Add URLs for products page on all nav includes and shop now button
- Add new products details function in views.py, copy all_products view and change details. Test first if possible.
- Update urls page with the product ID as the slug, view change and name to match view.
- Create products detail html page.
- Link the card anchors to the product detail page.
- Link the image on products detail to a new tab with just the image
- Add in the media query "max-width: 991px" if the header needs moving down.
- "action" attribute for the search bar form to link to the products in mobile nav and base.html.
- Change name attribute for search bar input.
- Views.py function for a get request with the name attribute within the get request.
- In the views.py add an if statement that checks for categories and filter the results based on those categories.
- In the nav html documents, add the category searches into the link URLs.
- Add URLs to all products selections with ?price&direction=asc afterwards. main nav and side nav.
- current_sorting = f'{sort}_{direction}' in views.py
- Views.py, import Lower and everything in the if sort in request
- Add a category display on each product card on the list products page and product detail page
- Add html for a selection box in the products.html file for selecting how to sort the products.
- In views.py, add if sortkey == 'category': sortkey = 'category__name', so the categories are sorted by name rather than ID.
- Add a catergory display next to the products title at the top of the content of the page, using the current categories varibale.
-- Add a cross button to remove the chosen category from the filter.
-- When selecting a different sort function, have a toggle for asc or desc
- Create JS function that changes the sort selector. Done by getting the selector value and the url, splitting the selector value into type of sort and direction, and setting the URL to the new value, if the selector value - reset. Else the sort and direction will be deleted.
--To add the toggle function, add a new function that targets the toggle, and changed the url of the toggle is clicked.

___Pending:___
Misc
- Add testing for new views.py functionality
-- Create a dedicated image view page.
-- Overlay product image when clicked on the list_products.

Featured products
-- Add a featured products box on the home page
-- Add admin functionality to add products to featured product either, on the product page, on the featured products admin page and on the products list admin page.


Search Funtion
-- Add a button that appears when a catergory is selected, to remove category filters.

Special Offers
-- Add a field to product model called deal and is_new
-- Add an admin option to create a deal on a product based on percentage discount.
-- Add an admin option to create a deal based on price of shopping basket.
-- Function the change deal field automatically if a deal is applied.
-- Change the category function to search for active deal and is_new fields if that is what selected.

Sorting products
- Add different categories. -- Needs more categories to sort by

- Add a back to top button onto list products page.
- Add script to scroll back to the top of the page.
-- Add a button the scroll up 2 lines or down 2 lines, so that every time the button is clicked it will display all new products.
- Add css for btt-button and btt-link